{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-page/admin-page.component.css","webpack:///./src/app/admin-page/admin-page.component.html","webpack:///./src/app/admin-page/admin-page.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-list/course-list.component.css","webpack:///./src/app/course-list/course-list.component.html","webpack:///./src/app/course-list/course-list.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/home-page/home-page.component.css","webpack:///./src/app/home-page/home-page.component.html","webpack:///./src/app/home-page/home-page.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/course.model.client.ts","webpack:///./src/app/models/user.model.client.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/topic.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/topic-list/topic-list.component.css","webpack:///./src/app/topic-list/topic-list.component.html","webpack:///./src/app/topic-list/topic-list.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".active.wbdv {\\n  background-color: red;\\n  border-color: red;\\n}\\n\\n.active.wbdv a {\\n  color: white;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid row\\\">\\n  <div class=\\\"col-4\\\">\\n    <h2>Admin Page</h2>\\n    <a routerLink=\\\"/profile\\\">Profile</a>\\n    <a routerLink=\\\"/home\\\">Home</a>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active\\\">Courses</li>\\n      <li *ngFor=\\\"let course of courses\\\"\\n          class=\\\"list-group-item wbdv\\\"\\n          [ngClass]=\\\"{'active': course.id == courseId}\\\">\\n        <a routerLink=\\\"/admin/course/{{course.id}}/section\\\"\\n        (click)=\\\"setCourseId(course.id)\\\">\\n          {{course.title}}\\n        </a>\\n      </li>\\n    </ul>\\n\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <app-section-list></app-section-list>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/course.model.client';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.css']\n})\nexport class AdminPageComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient) { }\n  courses: Course[] = [];\n  courseId = '';\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n  setCourseId(courseId) {\n    this.courseId = courseId;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {FormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { CourseServiceClient } from './services/course.service.client';\nimport { CourseListComponent } from './course-list/course-list.component';\nimport {routing} from './app.routing';\nimport { CourseViewerComponent } from './course-viewer/course-viewer.component';\nimport { ModuleListComponent } from './module-list/module-list.component';\nimport {ModuleServiceClient} from './services/module.service.client';\nimport { LessonTabsComponent } from './lesson-tabs/lesson-tabs.component';\nimport {LessonServiceClient} from './services/lesson.service.client';\nimport { TopicListComponent } from './topic-list/topic-list.component';\nimport {TopicServiceClient} from './services/topic.service.client';\nimport { WidgetListComponent } from './widget-list/widget-list.component';\nimport {WidgetServiceClient} from './services/widget.service.client';\nimport { LoginComponent } from './login/login.component';\nimport {UserServiceClient} from './services/user.service.client';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SectionListComponent } from './section-list/section-list.component';\nimport {SectionServiceClient} from './services/section.service.client';\nimport { AdminPageComponent } from './admin-page/admin-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    CourseListComponent,\n    CourseViewerComponent,\n    ModuleListComponent,\n    LessonTabsComponent,\n    TopicListComponent,\n    WidgetListComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    SectionListComponent,\n    AdminPageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    CourseServiceClient,\n    ModuleServiceClient,\n    LessonServiceClient,\n    TopicServiceClient,\n    WidgetServiceClient,\n    UserServiceClient,\n    SectionServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\nimport {HomePageComponent} from './home-page/home-page.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {SectionListComponent} from './section-list/section-list.component';\nimport {AdminPageComponent} from './admin-page/admin-page.component';\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home',  component: HomePageComponent},\n  { path: 'course/:courseId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId', component: CourseViewerComponent },\n  { path: 'login', component: LoginComponent},\n  { path: 'register', component: RegisterComponent},\n  { path: 'profile', component: ProfileComponent},\n  { path: 'course/:courseId/section', component: SectionListComponent},\n  { path: 'admin', component: AdminPageComponent},\n  { path: 'admin/course/:courseId/section', component: AdminPageComponent},\n  { path: '**', component: HomePageComponent} // last\n];\nexport const routing = RouterModule.forRoot(appRoutes);\n","module.exports = \".card {\\n  margin-bottom: 15px;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>Course Grid ({{courses.length}})</h2>\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n          <p class=\\\"card-text\\\">With supporting text below as a natural lead-in to additional content.</p>\\n          <a routerLink=\\\"/course/{{course.id}}\\\"\\n             class=\\\"btn btn-primary\\\"\\n             style=\\\"margin-right: 10px\\\">See More</a>\\n          <a routerLink=\\\"/course/{{course.id}}/section\\\"\\n             class=\\\"btn btn-primary\\\">Enroll</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Course } from '../models/course.model.client';\nimport { CourseServiceClient } from '../services/course.service.client';\n\n@Component({\n  selector: 'app-course-list',\n  templateUrl: './course-list.component.html',\n  styleUrls: ['./course-list.component.css']\n})\nexport class CourseListComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient) { }\n\n  courses: Course[] = [];\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>{{course.title}}</h2>\\n  <app-module-list></app-module-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/course.model.client';\n\n@Component({\n  selector: 'app-course-view',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadCourse(params['courseId']));\n  }\n\n  course: Course = new Course();\n\n  loadCourse(courseId) {\n    this.service.findCourseById(courseId)\n      .then(course => this.course = course);\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <Span class=\\\"navbar-brand disabled\\\">White Board</Span>\\n    <div class='row flex-lg-row'>\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a routerLink=\\\"/login\\\" class=\\\"nav-link\\\">Login <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a routerLink=\\\"/register\\\" class=\\\"nav-link\\\">Register <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/quizzes\\\" class=\\\"nav-link disabled\\\">Quizzes</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"container-fluid\\\">\\n    <div *ngIf=\\\"isLoggedIn\\\" style=\\\"margin-top: 10px; margin-bottom: 10px\\\">\\n      <h3>Current User: {{user.username}}</h3>\\n      <h4>Enrolled course: {{enrolledCourse.length}}</h4>\\n      <div *ngFor=\\\"let course of enrolledCourse\\\" class=\\\"col-sm-3\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n            <a routerLink=\\\"/course/{{course.id}}\\\"\\n               class=\\\"btn btn-primary\\\"\\n               style=\\\"margin-right: 10px\\\">See More</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <app-course-list></app-course-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {SectionServiceClient} from '../services/section.service.client';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private courseService: CourseServiceClient) { }\n\n  user;\n  isLoggedIn = false;\n  enrolledCourse = [];\n\n\n  ngOnInit() {\n    this.service.profile()\n      .then(user => {\n        this.user = user;\n        console.log(user);\n        if (!user.error) {\n          this.isLoggedIn = true;\n          this.sectionService\n            .findSectionsForStudent(user._id)\n            .then(sections => {\n              sections.forEach(section => {\n                this.courseService.findCourseById(section.section.courseId)\n                  .then(course => {\n                    let isThere = false;\n                    this.enrolledCourse.forEach(temp => {\n                      if (temp.id === course.id) {\n                        isThere = true;\n                      }\n                    });\n                    if (!isThere) {\n                      this.enrolledCourse.push(course);\n                    }\n                  });\n              });\n            });\n        }});\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n  <li *ngFor=\\\"let lesson of lessons\\\"\\n      class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\"\\n       [ngClass]=\\\"{'active': lesson.id == lessonId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\n      {{lesson.title}}\\n    </a>\\n  </li>\\n</ul>\\n<app-topic-list></app-topic-list>\\n<!--<app-widget-list></app-widget-list>-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport {LessonServiceClient} from '../services/lesson.service.client';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-lesson-tabs',\n  templateUrl: './lesson-tabs.component.html',\n  styleUrls: ['./lesson-tabs.component.css']\n})\nexport class LessonTabsComponent implements OnInit {\n\n  constructor(private service: LessonServiceClient, private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  lessons = [];\n  // dataLoaded = false;\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    if (this.moduleId) {\n      this.loadLessons(this.moduleId);\n    }\n  }\n\n  loadLessons(moduleId) {\n    this.moduleId = moduleId;\n    this.service.findLessonsForModule(moduleId)\n      .then(lessons => this.lessons = lessons);\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#links {\\n  justify-content: space-between;\\n  margin:10px\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Login</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Login\\n  </button>\\n  <div id=\\\"links\\\" class=\\\"row\\\">\\n    <a routerLink=\\\"/register\\\">Register</a>\\n    <a routerLink=\\\"/home\\\">Home</a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Route, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username;\n  password;\n  login(username, password) {\n    // console.log([username, password]);\n    if (!(username && password)) {\n      alert('Password and username required');\n      return;\n    } else {\n      this.service\n        .login(username, password)\n        .then(response => {\n          return response.json();\n        })\n        .then((user) => {\n          if (user.error) {\n            alert('User do not exist or password is incorrect');\n          } else {\n            this.router.navigate(['profile']);\n          }\n        });\n    }\n  }\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Course {\n  id: number;\n  title: string;\n}\n","export class User {\n  _id: string;\n  username: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phoneNumber: string;\n  address: string;\n}\n","module.exports = \".active.wbdv {\\n  background-color: red;\\n  border-color: red;\\n}\\n\\n.active.wbdv a {\\n  color: white;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active\\\">Modules</li>\\n      <li [ngClass]=\\\"{'active': module.id == moduleId}\\\" *ngFor=\\\"let module of modules\\\"\\n          class=\\\"list-group-item wbdv\\\">\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">\\n          {{module.title}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <app-lesson-tabs></app-lesson-tabs>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ModuleServiceClient} from '../services/module.service.client';\n\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  constructor(private service: ModuleServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  modules = [];\n\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.loadModules(this.courseId);\n  }\n\n  loadModules(courseId) {\n    this.courseId = courseId;\n    this.service.findModulesForCourse(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".input {\\n  margin-top: 5px;\\n}\\n\\n#links {\\n  justify-content: space-between;\\n  margin:10px\\n}\\n\\n#buttons {\\n  justify-content: space-between;\\n  margin:10px\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Profile</h1>\\n\\n  <div id=\\\"links\\\" class = \\\"row\\\">\\n    <a *ngIf=\\\"isAdmin\\\" routerLink=\\\"/admin\\\">Admin</a>\\n    <a routerLink=\\\"/home\\\">Home Page</a>\\n  </div>\\n\\n  <input [(ngModel)]=\\\"user.username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control input\\\" readonly/>\\n  <input [(ngModel)]=\\\"user.firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control input\\\"/>\\n  <input [(ngModel)]=\\\"user.lastName\\\"\\n         placeholder=\\\"lastName\\\"\\n         class=\\\"form-control input\\\"/>\\n  <input [(ngModel)]=\\\"user.email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control input\\\"/>\\n  <input [(ngModel)]=\\\"user.phoneNumber\\\"\\n         placeholder=\\\"phone\\\"\\n         class=\\\"form-control input\\\"/>\\n  <input [(ngModel)]=\\\"user.address\\\"\\n         placeholder=\\\"address\\\"\\n         class=\\\"form-control input\\\"/>\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"float-right btn btn-primary btn-block input\\\">\\n    Update\\n  </button>\\n\\n  <h2 style=\\\"margin-top: 20px\\\">Enrolled Courses - total: ({{courses.length}})</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let course of courses\\\" class=\\\"list-group-item\\\">\\n      {{course.title}}\\n      <a routerLink=\\\"/course/{{course.id}}\\\" style=\\\"margin-left: 20px\\\">See More About Course</a>\\n      <a routerLink=\\\"/course/{{course.id}}/section\\\" style=\\\"margin-left: 20px\\\">See Sections</a>\\n    </li>\\n  </ul>\\n\\n  <h2 style=\\\"margin-top: 20px\\\">Enrolled Sections - total: ({{sections.length}})</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let enrollment of sections\\\" class=\\\"list-group-item\\\">\\n      Section Name:{{enrollment.section.name}}\\n      Available Seats:({{enrollment.section.seats}})\\n      <button class=\\\"btn btn-danger\\\"\\n              (click)=\\\"unenrollment(user._id, enrollment.section._id)\\\">\\n        un-enroll\\n      </button>\\n    </li>\\n  </ul>\\n\\n  <div id=\\\"buttons\\\" class = \\\"row\\\">\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"DeleteUser()\\\">Delete Profile</button>\\n    <button (click)=\\\"logout()\\\" class=\\\"btn btn-primary\\\">Logout</button>\\n  </div>\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {User} from '../models/user.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {CourseServiceClient} from '../services/course.service.client';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private courseService: CourseServiceClient,\n              private router: Router) {\n  }\n\n  user = new User;\n  isAdmin = false;\n\n  sections = [];\n  courses = [];\n\n  update() {\n    // console.log(this.user);\n    this.service.updateUser(this.user).then(() => alert('Updated Successfully'));\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  unenrollment(userId, sectionId) {\n    this.sectionService\n      .unenrollStudentInSection(userId, sectionId)\n      .then(res => res.json())\n      .then(res => {\n        if (res.error) {\n          alert(res.error);\n        } else {\n          this.sectionService\n            .findSectionsForStudent(userId)\n            .then(sections => {\n              if (sections.error) {\n                alert(sections.error);\n              } else {\n                this.sections = sections;\n                this.findEnrolledCourses(sections);\n                alert('Un-enrollment successfully');\n              }\n            });\n        }\n      });\n  }\n\n  initialUser() {\n    this.service\n      .profile()\n      .then(user => {\n        if (user.error) {\n          alert('You have logged out!');\n        } else {\n          this.user = user;\n          if (user.username === 'admin' && user.password === 'admin') {\n            this.isAdmin = true;\n          }\n\n          this.sectionService\n            .findSectionsForStudent(user._id)\n            .then(sections => {\n              // console.log(sections);\n              if (sections.error) {\n                alert(sections.error);\n              } else {\n                this.sections = sections;\n                this.findEnrolledCourses(sections);\n              }\n            });\n        }\n      });\n  }\n\n  findEnrolledCourses(sections) {\n        this.courses = new Array();\n        sections.forEach(section => {\n          this.courseService.findCourseById(section.section.courseId)\n            .then(course => {this.courses.push(course); console.log(this.courses)});\n        });\n  }\n\n  DeleteUser() {\n    if (confirm('Are you sure to cancel the account ? It can not be retrieved again')) {\n      this.service\n        .deleteUser(this.user)\n        .then(res => res.json())\n        .then(res => {\n          if (res.err) {\n            alert(res.err);\n          } else {\n            this.router.navigate(['login']);\n          }\n        });\n    }\n  }\n\n  ngOnInit() {\n    this.initialUser();\n  }\n\n}\n","module.exports = \"#links {\\n  justify-content: space-between;\\n  margin:10px\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Register</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password2\\\"\\n         placeholder=\\\"verify password\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"register(username, password, password2)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Register\\n  </button>\\n\\n  <div id=\\\"links\\\" class=\\\"row\\\">\\n    <a routerLink=\\\"/login\\\">Login</a>\\n    <a routerLink=\\\"/home\\\">Home</a>\\n  </div>\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  username;\n  password;\n  password2;\n  register(username, password, password2) {\n    if (password !== password2) {\n      alert('The passwords do not match');\n      return;\n    }\n    this.service.findUserByUsername(username).then(res => {\n      if (res !== null) {\n        alert('Username has been taken');\n        return;\n      } else {\n        this.service\n          .createUser(username, password)\n          .then(() =>\n            this.router.navigate(['profile']));\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2 *ngIf=\\\"course\\\">Sections for course: {{course.title}}</h2>\\n  <h4  *ngIf=\\\" student && student.username !== 'admin'\\\"> Note: you can just register only one section for per course</h4>\\n  <div *ngIf=\\\"student && student.username === 'admin' && student.password === 'admin' && courseId\\\">\\n    <input [(ngModel)]=\\\"sectionName\\\"\\n           placeholder=\\\"Section Name\\\"\\n           class=\\\"form-control\\\">\\n    <input [(ngModel)]=\\\"seats\\\"\\n           placeholder=\\\"Seats available\\\"\\n           class=\\\"form-control\\\">\\n    <button (click)=\\\"createSection(sectionName, seats)\\\" class=\\\"btn btn-success btn-block\\\">\\n      Add Section\\n    </button>\\n  </div>\\n\\n  <div *ngIf=\\\"isUpdating\\\">\\n    <h2>Modifying Section: </h2>\\n    <input [(ngModel)]=\\\"updatingSectionName\\\"\\n           placeholder=\\\"Section Name\\\"\\n           class=\\\"form-control\\\">\\n    <input [(ngModel)]=\\\"updatingSectionSeat\\\"\\n           placeholder=\\\"Seats available\\\"\\n           class=\\\"form-control\\\">\\n    <button class=\\\"btn btn-primary\\\"\\n    (click)=\\\"saveUpdate()\\\">Save Update</button>\\n  </div>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n      Name:{{section.name}}   Available Seats:{{section.seats}}\\n      <button (click)=\\\"enroll(section)\\\"\\n              *ngIf=\\\" student && student.username !== 'admin'\\\"\\n              class=\\\"float-right btn btn-primary\\\">Enroll</button>\\n      <button class=\\\"btn btn-warning\\\"\\n              (click)=\\\"updateSection(section)\\\"\\n              *ngIf=\\\"student && student.username === 'admin'\\\">\\n        Update\\n      </button>\\n      <button class=\\\"btn btn-danger\\\"\\n              (click)=\\\"deleteSection(section)\\\"\\n              *ngIf=\\\"student && student.username === 'admin'\\\">\\n        Delete\\n      </button>\\n    </li>\\n  </ul>\\n\\n  <a routerLink=\\\"/profile\\\">Go Back To Profile</a>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {CourseServiceClient} from '../services/course.service.client';\n\n@Component({\n  selector: 'app-section-list',\n  templateUrl: './section-list.component.html',\n  styleUrls: ['./section-list.component.css']\n})\nexport class SectionListComponent implements OnInit {\n\n  constructor(private service: SectionServiceClient,\n              private userService: UserServiceClient,\n              private router: Router,\n              private courseService: CourseServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => {\n      this.courseService.findCourseById(params['courseId']).then(course => this.course = course);\n      this.loadSections(params['courseId']);\n    });\n  }\n\n  sectionName = '';\n  seats = '';\n  courseId = '';\n  sections = [];\n  student;\n  isUpdating = false;\n  updatingSectionName;\n  updatingSectionSeat = 0;\n  updatingSectionId;\n  course;\n\n  loadSections(courseId) {\n    if (courseId) {\n      this.courseId = courseId;\n      this.service\n        .findSectionsForCourse(courseId)\n        .then(sections => this.sections = sections);\n    }\n  }\n\n  createSection(sectionName, seats) {\n    if (seats === '') {\n      alert('please enter the number of section seats');\n    } else {\n      if (sectionName === '') {\n        sectionName = this.course.title + ' ' + 'Section' + (this.sections.length + 1);\n      }\n      this\n        .service\n        .createSection(this.courseId, sectionName, seats)\n        .then(() => {\n          alert('Successfully created');\n          this.loadSections(this.courseId);\n        });\n    }\n\n  }\n\n  hasEnrolled(sections) {\n    for (let i = 0; i < sections.length; i++) {\n      if (sections[i].courseId === this.courseId) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  enroll(section) {\n    // console.log(this.student);\n    if (this.student.error) {\n      alert(this.student.error);\n    } else {\n      this.service.findSectionsForStudent(this.student._id)\n        .then(sections => {\n          console.log(this.hasEnrolled(sections));\n          if (this.hasEnrolled(sections)) {\n            alert('You has been enrolled in this course');\n          } else {\n            this.service\n              .enrollStudentInSection(this.student._id, section._id)\n              .then(temp => temp.json())\n              .then(result => {\n                if (result.error) {\n                  alert(result.error);\n                } else {\n                  this.router.navigate(['profile']);\n                }\n              });\n          }\n        });\n    }\n  }\n\n  ngOnInit() {\n      this.userService\n        .profile()\n        .then(user => {\n          if (user !== undefined) {\n            this.student = user;\n          }\n        });\n  }\n\n  updateSection(section) {\n    this.isUpdating = !this.isUpdating;\n    this.updatingSectionName = section.name;\n    this.updatingSectionSeat = section.seats;\n    this.updatingSectionId = section._id;\n  }\n\n  saveUpdate() {\n    const newSection = {\n      _id: this.updatingSectionId,\n      name : this.updatingSectionName,\n      seats : this.updatingSectionSeat\n    };\n    this.service\n      .updateSection(newSection)\n      .then(() => {\n        this.isUpdating = false;\n        alert('Successfully updated');\n        this.loadSections(this.courseId);\n      });\n  }\n\n  deleteSection(section) {\n    this.service\n      .deleteSection(section)\n      .then(() => {\n        alert('Successfully deleted');\n        this.loadSections(this.courseId);\n      });\n  }\n\n}\n\n","export class CourseServiceClient {\n  COURSE_URL = 'https://zhemingg-assignment.herokuapp.com/api/course';\n  findAllCourses() {\n    return fetch(this.COURSE_URL)\n      .then(response => response.json());\n  }\n  findCourseById(courseId) {\n    // console.log(this.COURSE_URL + '/' + courseId);\n    return fetch(this.COURSE_URL + '/' + courseId)\n      .then(response => response.json());\n  }\n}\n","export class LessonServiceClient {\n  findLessonsForModule(moduleId) {\n    return fetch('http://zhemingg-assignment.herokuapp.com/api/course/courseId/module/' + moduleId + '/lesson')\n      .then(response => response.json());\n  }\n}\n","\nexport class ModuleServiceClient {\n  MODULE_URL = 'https://zhemingg-assignment.herokuapp.com/api/course/COURSE_ID/module';\n  findModulesForCourse(courseId) {\n    return fetch(this.MODULE_URL.replace('COURSE_ID', courseId))\n      .then(response => response.json());\n  }\n}\n","export class SectionServiceClient {\n\n  SECTION_URL = 'https://zhemingg-node-student.herokuapp.com/api/course/COURSEID/section';\n\n  findSectionsForStudent(studentId) {\n    const url = 'https://zhemingg-node-student.herokuapp.com/api/student/' +  studentId + '/section';\n    return fetch(url, {\n      credentials: 'include'\n    })\n      .then(response => response.json());\n  }\n\n  enrollStudentInSection(studentId, sectionId) {\n    const url = 'https://zhemingg-node-student.herokuapp.com/api/student/' + studentId + '/section/' + sectionId;\n    return fetch(url, {\n      method: 'post',\n      credentials: 'include'\n    });\n  }\n\n  unenrollStudentInSection(studentId, sectionId) {\n    const url = 'https://zhemingg-node-student.herokuapp.com/api/student/' + studentId + '/section/' + sectionId;\n    return fetch(url, {\n      method: 'delete',\n      credentials: 'include'\n    });\n    // console.log('unenrollment');\n  }\n\n  findSectionsForCourse(courseId) {\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId))\n      .then(response => response.json());\n  }\n\n  createSection(courseId, name, seats) {\n    const section = {courseId, name, seats};\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId), {\n      method: 'post',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  updateSection(newSection) {\n    return fetch('https://zhemingg-node-student.herokuapp.com/api/section/' + newSection._id, {\n      method: 'put',\n      body: JSON.stringify(newSection),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  deleteSection(section) {\n    return fetch('https://zhemingg-node-student.herokuapp.com/api/section/' + section._id, {\n      method: 'delete',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  hasEnrollment(studentId, sectionId, courseId) {\n    return fetch('https://zhemingg-node-student.herokuapp.com/api/student/' + studentId + '/course/' + courseId + '/section/' + sectionId, {\n      credentials: 'include',\n    })\n      .then(res => res.json());\n  }\n}\n","export class TopicServiceClient {\n  findTopicsForLesson(lessonId) {\n    return fetch('http://zhemingg-assignment.herokuapp.com/api/course/courseId/module/moduleId/lesson/' + lessonId + '/topic')\n      .then(response => response.json());\n  }\n}\n","export class UserServiceClient {\n\n  findUserById(userId) {\n    return fetch('https://zhemingg-node-student.herokuapp.com/api/user/' + userId)\n      .then(response => response.json());\n  }\n\n  findUserByUsername(username) {\n    return fetch('https://zhemingg-node-student.herokuapp.com/api/users/' + username)\n      .then(response => response.json());\n  }\n\n  login(username, password) {\n    const credentials = {\n      username: username,\n      password: password\n    };\n    return fetch('https://zhemingg-node-student.herokuapp.com/api/login', {\n      method: 'post',\n      body: JSON.stringify(credentials),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  logout() {\n    return fetch('https://zhemingg-node-student.herokuapp.com/api/logout', {\n      method: 'post',\n      credentials: 'include'\n    });\n  }\n\n  profile() {\n    return fetch('https://zhemingg-node-student.herokuapp.com/api/profile',\n      {\n        credentials: 'include', // include, same-origin, *omit\n      })\n      .then(response => response.json());\n  }\n\n  createUser(username, password) {\n    const user = {\n      username: username,\n      password: password\n    };\n    return fetch('https://zhemingg-node-student.herokuapp.com/api/register', {\n      body: JSON.stringify(user),\n      credentials: 'include', // include, same-origin, *omit\n      method: 'post',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  updateUser(user) {\n    return fetch('https://zhemingg-node-student.herokuapp.com/api/profile' , {\n      body: JSON.stringify(user),\n      credentials: 'include', // include, same-origin, *omit\n      method: 'put',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  deleteUser(user) {\n    return fetch('https://zhemingg-node-student.herokuapp.com/api/profile', {\n      body: JSON.stringify(user),\n      credentials: 'include', // include, same-origin, *omit\n      method: 'delete',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n}\n","export class WidgetServiceClient {\n  findWidgetsForTopic (topicId) {\n    return fetch('http://zhemingg-assignment.herokuapp.com/api/topic/' + topicId + '/widget')\n      .then(response => response.json());\n  }\n}\n","module.exports = \".active.wbdv {\\n  background-color: red;\\n  border-color: red;\\n}\\n\\n.active.wbdv a {\\n  color: white;\\n}\\n\"","module.exports = \"<!--<ul class=\\\"list-group\\\">-->\\n  <!--<li *ngFor=\\\"let topic of topics\\\"-->\\n      <!--class=\\\"list-group-item active\\\">-->\\n    <!--<a class=\\\"nav-link\\\"-->\\n       <!--[ngClass]=\\\"{'active': topic.id == topicId}\\\"-->\\n       <!--routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lessonId}}/topic/{{topic.id}}\\\">-->\\n      <!--{{topic.title}}-->\\n    <!--</a>-->\\n  <!--</li>-->\\n<!--</ul>-->\\n\\n\\n    <ul class=\\\"list-group\\\">\\n      <li [ngClass]=\\\"{'active': topic.id == topicId}\\\" *ngFor=\\\"let topic of topics\\\"\\n          class=\\\"list-group-item wbdv\\\">\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lessonId}}/topic/{{topic.id}}\\\">\\n          {{topic.title}}</a>\\n      </li>\\n    </ul>\\n\\n<app-widget-list></app-widget-list>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {TopicServiceClient} from '../services/topic.service.client';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-topic-list',\n  templateUrl: './topic-list.component.html',\n  styleUrls: ['./topic-list.component.css']\n})\nexport class TopicListComponent implements OnInit {\n\n  constructor(private service: TopicServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  topicId;\n  topics = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.topicId = params['topicId'];\n    if (this.lessonId) {\n      this.loadTopics(this.lessonId);\n    }\n  }\n\n  loadTopics (lessonId) {\n    this.lessonId = lessonId;\n    this.service.findTopicsForLesson(lessonId)\n      .then(topics => this.topics = topics );\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <div *ngFor=\\\"let widget of widgets\\\">\\n    <div *ngIf=\\\"widget.widgetType === 'Heading Widget' && widget.size === '1'\\\">\\n      <h1>{{widget.text}}</h1>\\n    </div>\\n    <div *ngIf=\\\"widget.widgetType === 'Heading Widget' && widget.size === '2'\\\">\\n      <h2>{{widget.text}}</h2>\\n    </div>\\n    <div *ngIf=\\\"widget.widgetType === 'Heading Widget' && widget.size === '3'\\\">\\n      <h3>{{widget.text}}</h3>\\n    </div>\\n\\n    <div *ngIf=\\\"widget.widgetType === 'Paragraph Widget'\\\">\\n      {{widget.text}}\\n    </div>\\n\\n    <div *ngIf=\\\"widget.widgetType === 'List Widget' && widget.listType === 'ordered'\\\">\\n      <ol>\\n        <li *ngFor=\\\"let line of widget.listItems.split('\\\\n')\\\">{{line}}</li>\\n      </ol>\\n    </div>\\n\\n    <div *ngIf=\\\"widget.widgetType === 'List Widget' && widget.listType === 'unordered'\\\">\\n      <ul>\\n        <li *ngFor=\\\"let line of widget.listItems.split('\\\\n')\\\">{{line}}</li>\\n      </ul>\\n    </div>\\n\\n    <div *ngIf=\\\"widget.widgetType === 'Image Widget'\\\">\\n      <img src={{widget.src}}/>\\n    </div>\\n\\n    <div *ngIf=\\\"widget.widgetType === 'Link Widget'\\\">\\n      <a href={{widget.href}}>{{widget.text}}</a>\\n    </div>\\n  </div>\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {WidgetServiceClient} from '../services/widget.service.client';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private service: WidgetServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.setParams(params));\n  }\n  topicId;\n  widgets = [];\n  setParams(params) {\n    this.topicId = params['topicId'];\n    if (this.topicId) {\n      this.loadWidgets(this.topicId);\n    }\n  }\n\n  loadWidgets(topicId) {\n    this.topicId = topicId;\n    this.service.findWidgetsForTopic(topicId)\n      .then(widgets => this.widgets = widgets );\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}